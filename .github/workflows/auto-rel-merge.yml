name: Auto Merge Changes from maint-* Branches

on:
  push:
    branches:
      - 'maint-*'  # Trigger when any maint-* branch is updated

jobs:
  merge:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Ensure all branches are fetched

      - name: Get triggering branch and latest commit hash
        id: get_info
        run: |
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          COMMIT_HASH=$(git rev-parse --short HEAD)
          echo "Branch: $BRANCH_NAME, Commit: $COMMIT_HASH"
          echo "::set-output name=branch::$BRANCH_NAME"
          echo "::set-output name=commit::$COMMIT_HASH"

      - name: Read target branches from .backport-branches
        id: read_branches
        run: |
          maint_branch=${{ steps.get_info.outputs.branch }}
          echo "Processing maint branch: $maint_branch"

          # Fetch latest version of maint branch
          git fetch origin $maint_branch
          git checkout $maint_branch

          # Read the .backport-branches file if it exists
          if [[ -f .backport-branches ]]; then
            echo "::set-output name=branches::$(cat .backport-branches | tr '\n' ' ')"
          else
            echo "No .backport-branches file found in $maint_branch. Exiting."
            exit 1
          fi

      - name: Merge changes into target branches
        run: |
          git config --global user.name "Garden Linux Builder"
          git config --global user.email "gardenlinux@users.noreply.github.com"
          maint_branch=${{ steps.get_info.outputs.branch }}
          commit_hash=${{ steps.get_info.outputs.commit }}
          
          for branch in ${{ steps.read_branches.outputs.branches }}; do
            echo "Processing merge for target branch: $branch"

            git fetch origin

            # Generate a unique temporary branch name
            TEMP_BRANCH="auto-merge-${maint_branch}-to-${branch}-${commit_hash}"
            git checkout -b "$TEMP_BRANCH" origin/$branch

            # Attempt to merge
            if git merge origin/$maint_branch --no-ff -m "Automated merge from $maint_branch ($commit_hash)"; then
              echo "Merge successful, pushing changes..."
              git push origin "$TEMP_BRANCH:$branch"
            else
              echo "Merge conflict detected! Creating a pull request..."

              git add . 
              git commit -m "Unresolved merge conflict. Must resolve manually. Squash PR commit and edit message."

              # Push the temporary branch
              git push origin "$TEMP_BRANCH"

              # Create a Pull Request
              gh pr create \
                --base "$branch" \
                --head "$TEMP_BRANCH" \
                --title "Auto-merge: $maint_branch â†’ $branch ($commit_hash)" \
                --body "Automated merge failed due to conflicts. Please review and resolve."
            fi
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

